version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: heart_risk_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sami
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: heart_risk_data
    ports:
      - "5432:5432"
    volumes:
      - heart_risk_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sami", "-d", "heart_risk_data"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  data_service:
    build:
      context: .
      dockerfile: backend/data_service/Dockerfile
    container_name: data_service
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: "postgresql://sami:secret@db:5432/heart_risk_data"
    volumes:
      - .:/app
    working_dir: /app/backend/data_service
    command:
      [
        "bash",
        "-c",
        "python init.py && uvicorn api:app --host 0.0.0.0 --port 8001 --reload",
      ]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -sf http://localhost:8001/data | grep -q . || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  model_training:
    build:
      context: ./backend/model_training
      dockerfile: Dockerfile
    container_name: model_training
    depends_on:
      data_service:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      DATA_SERVICE_URL: "http://data_service:8001"
    volumes:
      - .:/app
      - ./backend/model_training/serialized_models:/app/backend/model_training/serialized_models
      - ./backend/model_training/mlruns_data:/app/backend/model_training/mlruns_data
    command:
      ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -sf http://localhost:8002/check | grep -q . || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  orchestrator:
    build:
      context: ./backend/Orchestrator
      dockerfile: Dockerfile
    container_name: orchestrator
    depends_on:
      - model_training
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      DATA_SERVICE_URL: "http://data_service:8001"
      MODEL_SERVICE_URL: "http://model_training:8002"
    volumes:
      - .:/app
    working_dir: /app/backend/Orchestrator
    command:
      [
        "uvicorn",
        "orchestrator:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8003",
        "--reload",
      ]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: streamlit_frontend
    depends_on:
      - orchestrator
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      ORCHESTRATOR_URL: "http://orchestrator:8003"
    volumes:
      - ./frontend:/app
    command:
      [
        "streamlit",
        "run",
        "/app/Home.py",
        "--server.port=8501",
        "--server.address=0.0.0.0",
      ]

volumes:
  heart_risk_db_data:
